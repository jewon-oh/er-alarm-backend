plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.er-alarm'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.amqp:spring-rabbit-stream'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'io.projectreactor:reactor-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
//    runtimeOnly 'io.micrometer:micrometer-registry-influx'
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // map struct
//    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
//    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
//    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // jackson
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.0'

    // httpclient 5
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.4'
    implementation group: 'org.apache.httpcomponents.core5', name: 'httpcore5', version: '5.3'
    implementation group: 'org.apache.httpcomponents.core5', name: 'httpcore5-h2', version: '5.3'

    // prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // prometheus exemplar
    // https://mvnrepository.com/artifact/io.prometheus/simpleclient_common
    implementation 'io.prometheus:simpleclient_common:0.16.0'

    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
